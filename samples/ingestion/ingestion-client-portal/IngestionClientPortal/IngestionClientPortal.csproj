<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFramework>netcoreapp3.1</TargetFramework>
		<AzureFunctionsVersion>v3</AzureFunctionsVersion>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="2.9.8">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.NET.Sdk.Functions" Version="3.0.13" />
		<PackageReference Include="MimeTypeMapOfficial" Version="1.0.17" />
		<PackageReference Include="Newtonsoft.Json" Version="11.0.2" />
		<PackageReference Include="StyleCop.Analyzers" Version="1.1.118">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>
	<ItemGroup>
		<None Update="host.json">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="proxies.json">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>
	<ItemGroup>
		<AdditionalFiles Include="..\stylecop.json">
			<Link>stylecop.json</Link>
		</AdditionalFiles>
	</ItemGroup>
	<Target Name="NpmInstall" Inputs="www/package.json" Outputs="node_modules/.install-stamp">
		<Exec Command="npm ci" Condition="$(RestorePackagesWithLockFile) == 'true'" />
		<Exec Command="npm install" />

		<!-- Write the stamp file, so incremental builds work -->
		<Touch Files="www/node_modules/.install-stamp" AlwaysCreate="true" />
	</Target>
	<Target Name="NpmRunBuild" DependsOnTargets="NpmInstall" BeforeTargets="BeforeBuild">
		<Exec WorkingDirectory="www" Command="npm install react-scripts --save" />
		<Exec WorkingDirectory="www" Command="npm run build --prod" />
	</Target>
	<Target Name="CopyCustomContent" AfterTargets="AfterBuild">
		<CreateItem Include="www\build\**\*.*">
			<Output TaskParameter="Include" ItemName="MyFilesToCopy" />
		</CreateItem>
		<Copy SourceFiles="@(MyFilesToCopy)" DestinationFolder="$(OutDir)\www\%(RecursiveDir)" />
	</Target>
	<ItemGroup>
		<Content Include="www\build\**\*" Link="www\%(RecursiveDir)%(FileName)%(Extension)" CopyToPublishDirectory="PreserveNewest" />
	</ItemGroup>
</Project>